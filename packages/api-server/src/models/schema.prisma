generator client {
  provider = "prisma-client-js"
  // output   = "./migrations"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
  // relationMode = "prisma"
}

model ShelfCategory {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  color String
  notes String
  shelf Shelf[]
}

model Shelf {
  id              Int           @id @default(autoincrement())
  name            String
  size            String
  shelfCategoryId Int
  shelfCategory   ShelfCategory @relation(fields: [shelfCategoryId], references: [id])
  item            Item[]

  @@index([shelfCategoryId])
}

model Company {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  notes  String
  item   Item[]
  Parcel Parcel[]
}

model Status {
  id          Int      @id @default(autoincrement())
  itemId      Int
  item        Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([itemId])
}

model Item {
  id              Int              @id @default(autoincrement())
  name            String
  description     String
  placeId         Int
  shelfId         Int?
  shelf           Shelf?           @relation(fields: [shelfId], references: [id])
  shelfSize       String?
  itemTypeId      Int
  itemType        ItemType         @relation(fields: [itemTypeId], references: [id])
  attributeValue  AttributeValue[]
  status          Status[]
  company         Company          @relation(fields: [companyId], references: [id])
  companyId       Int
  isDeleted       Boolean          @default(false)
  isOrder         Boolean          @default(false)
  orderCategory   OrderCategory?   @relation(fields: [orderCategoryId], references: [id])
  orderCategoryId Int?
  parcelId        Int?
  parcel          Parcel?          @relation(fields: [parcelId], references: [id])

  @@index([shelfId, itemTypeId, companyId, orderCategoryId, parcelId])
}

model Parcel {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  color       String
  companyId   Int
  company     Company @relation(fields: [companyId], references: [id])
  isSent      Boolean @default(false)
  Item        Item[]

  @@index([companyId])
}

model OrderCategory {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  color       String
  Item        Item[]
}

model ItemType {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  item          Item[]
  typeAttribute TypeAttribute[]
}

model TypeAttribute {
  id             Int              @id @default(autoincrement())
  name           String
  itemtypeId     Int
  itemtype       ItemType         @relation(fields: [itemtypeId], references: [id], onDelete: Cascade)
  attributeValue AttributeValue[]

  @@index([itemtypeId])
}

model AttributeValue {
  id              Int           @id @default(autoincrement())
  value           String
  itemId          Int
  item            Item          @relation(fields: [itemId], references: [id], onDelete: Cascade)
  typeAttributeId Int
  typeAttribute   TypeAttribute @relation(fields: [typeAttributeId], references: [id], onDelete: Cascade)

  @@index([itemId, typeAttributeId])
}
